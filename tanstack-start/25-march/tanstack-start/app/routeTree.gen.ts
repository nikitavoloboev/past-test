/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TryImport } from './routes/try'
import { Route as ParamsImport } from './routes/params'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthSomeRouteImport } from './routes/_auth/some-route'

// Create/Update Routes

const TryRoute = TryImport.update({
  id: '/try',
  path: '/try',
  getParentRoute: () => rootRoute,
} as any)

const ParamsRoute = ParamsImport.update({
  id: '/params',
  path: '/params',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSomeRouteRoute = AuthSomeRouteImport.update({
  id: '/some-route',
  path: '/some-route',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/params': {
      id: '/params'
      path: '/params'
      fullPath: '/params'
      preLoaderRoute: typeof ParamsImport
      parentRoute: typeof rootRoute
    }
    '/try': {
      id: '/try'
      path: '/try'
      fullPath: '/try'
      preLoaderRoute: typeof TryImport
      parentRoute: typeof rootRoute
    }
    '/_auth/some-route': {
      id: '/_auth/some-route'
      path: '/some-route'
      fullPath: '/some-route'
      preLoaderRoute: typeof AuthSomeRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSomeRouteRoute: typeof AuthSomeRouteRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSomeRouteRoute: AuthSomeRouteRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteRouteWithChildren
  '/params': typeof ParamsRoute
  '/try': typeof TryRoute
  '/some-route': typeof AuthSomeRouteRoute
  '/': typeof AuthIndexRoute
}

export interface FileRoutesByTo {
  '/params': typeof ParamsRoute
  '/try': typeof TryRoute
  '/some-route': typeof AuthSomeRouteRoute
  '/': typeof AuthIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/params': typeof ParamsRoute
  '/try': typeof TryRoute
  '/_auth/some-route': typeof AuthSomeRouteRoute
  '/_auth/': typeof AuthIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/params' | '/try' | '/some-route' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/params' | '/try' | '/some-route' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/params'
    | '/try'
    | '/_auth/some-route'
    | '/_auth/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ParamsRoute: typeof ParamsRoute
  TryRoute: typeof TryRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ParamsRoute: ParamsRoute,
  TryRoute: TryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/params",
        "/try"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/some-route",
        "/_auth/"
      ]
    },
    "/params": {
      "filePath": "params.tsx"
    },
    "/try": {
      "filePath": "try.tsx"
    },
    "/_auth/some-route": {
      "filePath": "_auth/some-route.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
